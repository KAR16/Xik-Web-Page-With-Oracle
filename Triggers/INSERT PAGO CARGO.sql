CREATE OR REPLACE TRIGGER INSERT_AND_UPDATE 
AFTER INSERT ON PAGO 
FOR EACH ROW
DECLARE
--VARIABLES DE FECHA
DIA INT; MES INT; AÑO INT;
FECHA_LIMITE DATE;

--VARIABLES DE CALCULO
TIPO_CAMBIO NUMERIC(11, 2) := (:NEW.TIPO_DE_CAMBIO);
MONEDA INT := (:NEW.MONEDA);
PAGO INT := (:NEW.MONTO);
DOLLAR NUMERIC(11, 2);
RESULTADO NUMERIC(11,2);

--CURSOR
CURSOR CURCargoEstudiante IS
SELECT CARGO, CARNE, MONTO, SALDO, FECHA_VENCIMIENTO, DESCRIPCION, MONEDA 
FROM CARGO 
WHERE CARNE = (:NEW.CARNE)
ORDER BY MONEDA ASC, CARNE, FECHA_VENCIMIENTO ASC;
-- FIN DECLARE

BEGIN

AÑO := (EXTRACT(YEAR FROM (:NEW.FECHA_APLICACION)));
MES := (EXTRACT(MONTH FROM (:NEW.FECHA_APLICACION)));
DIA:= (EXTRACT(DAY FROM (:NEW.FECHA_APLICACION)));

DIA := DIA - 1; 

FECHA_LIMITE := TO_DATE(AÑO || '/' || (MES + 1) || '/' || DIA, 'YYYY/MM/DD');



FOR Iteracion IN CURCargoEstudiante
LOOP
DBMS_OUTPUT.put_line(Iteracion.FECHA_VENCIMIENTO);
DBMS_OUTPUT.put_line(FECHA_LIMITE);
 IF (PAGO > 0) THEN
    IF (Iteracion.FECHA_VENCIMIENTO <= FECHA_LIMITE AND Iteracion.MONEDA = MONEDA) THEN
        DBMS_OUTPUT.put_line('Soy Menor que tu fecha');
        IF (PAGO <= Iteracion.SALDO) THEN
            RESULTADO := Iteracion.SALDO - PAGO;
            --UPDATE ENTIDAD CARGO
            UPDATE CARGO
            SET SALDO = RESULTADO
            WHERE CARGO = Iteracion.CARGO AND FECHA_VENCIMIENTO = Iteracion.FECHA_VENCIMIENTO;
            
            --INSERT ENTIDAD PAGO_CARGO
            INSERT INTO PAGO_CARGO
            VALUES(SECIdPagoCargo.NEXTVAL, :NEW.PAGO, Iteracion.CARGO, PAGO);
        ELSE
            --UPDATE ENTIDAD CARGO
            UPDATE CARGO
            SET SALDO = 0
            WHERE CARGO = Iteracion.CARGO AND FECHA_VENCIMIENTO = Iteracion.FECHA_VENCIMIENTO;
            
            --INSERT ENTIDAD PAGO_CARGO
            INSERT INTO PAGO_CARGO
            VALUES(SECIdPagoCargo.NEXTVAL, :NEW.PAGO, Iteracion.CARGO, Iteracion.SALDO);
        END IF;
    END IF;
PAGO := PAGO - Iteracion.SALDO;
ELSE
    EXIT WHEN PAGO <= 0 OR Iteracion.FECHA_VENCIMIENTO > FECHA_LIMITE;
END IF;
END LOOP;
-- FIN BEGIN 
  NULL;
END;